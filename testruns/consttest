Testing, testing
init'd
Got: Load "/home/izzy/prog/slick/Test.hs"
These be the argHoles:fromList [RealSrcSpan SrcSpanOneLine "/home/izzy/prog/slick/Test.hs" 32 11 12,RealSrcSpan SrcSpanOneLine "/home/izzy/prog/slick/Test.hs" 35 25 26]
Giving: Ok
Got: Search "Either String (IO Int) -> IO (Maybe String)" (SearchOptions {deduplicate = False, depthLimit = 4})
(Word [(TypeFunctionTyCon Either, [String]),
       (TypeFunctionTyCon IO, [])] Just Int,
 [1, 1, 1, 1])
length moveSeqs = 1360
# distinct move seqs = 1360
size gs = 307
Giving: SetInfoWindow "eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) show . sequence\neitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) fromIntegral . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) even . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . sequence . (fmap . fmap) realToFrac . (fmap . fmap) show\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) realToFrac . (fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) realToFrac . (fmap . fmap) show\neitherToMaybe . sequenceA . (fmap . fmap) odd . (fmap . fmap) show\n(fmap . fmap) toInteger . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) fromIntegral . sequence . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) toInteger . (fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . sequenceA . (fmap . fmap) even . (fmap . fmap) show\n(fmap . fmap) enumFrom . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) realToFrac . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) print . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) print . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) toInteger . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) print . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) realToFrac . eitherToMaybe . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) odd . sequence . (fmap . fmap) show\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) print . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) realToFrac . (fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) realToFrac . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) odd . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) enumFrom . sequence . (fmap . fmap) show\n(fmap . fmap) fromIntegral . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) fromIntegral . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) print . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) show . sequence\n(fmap . fmap) odd . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) toInteger . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) realToFrac . (fmap . fmap) show . sequenceA\n(fmap . fmap) even . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) fromIntegral . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) realToFrac . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) enumFrom . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) print . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) fromIntegral . (fmap . fmap) show . sequenceA\n(fmap . fmap) toInteger . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) odd . (fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) show . sequence\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) show . sequence\neitherToMaybe . sequence . (fmap . fmap) even . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap . fmap) show . sequence\neitherToMaybe . sequence . (fmap . fmap) fromEnum . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) odd . sequenceA . (fmap . fmap) show\n(fmap . fmap) enumFrom . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) odd . eitherGot: Load "/home/izzy/prog/slick/Mote.hs"
These be the argHoles:fromList []
Giving: Ok
Got: NextHole (ClientState {path = "/home/izzy/prog/slick/Mote.hs", cursorPos = (249,34)})
Giving: Error "No hole at the current location."
Got: EnterHole (ClientState {path = "/home/izzy/prog/slick/Mote.hs", cursorPos = (249,34)})
Giving: SetInfoWindow "No Hole found"
Got: GetHoleInfo (ClientState {path = "/home/izzy/prog/slick/Mote.hs", cursorPos = (249,34)}) (HoleInfoOptions {sendOutputAsData = False, withSuggestions = False})
Giving: Error "No hole at the current location."
Got: Load "/home/izzy/prog/slick/Mote.hs"
Giving: Error "GHC error: /home/izzy/prog/slick/Mote.hs:249:37: Not in scope: \8216gs\8217\n"
Got: NextHole (ClientState {path = "/home/izzy/prog/slick/Mote.hs", cursorPos = (249,31)})
Giving: Error "No hole at the current location."
Got: EnterHole (ClientState {path = "/home/izzy/prog/slick/Mote.hs", cursorPos = (249,31)})
Giving: SetInfoWindow "No Hole found"
Got: GetHoleInfo (ClientState {path = "/home/izzy/prog/slick/Mote.hs", cursorPos = (249,31)}) (HoleInfoOptions {sendOutputAsData = False, withSuggestions = False})
Giving: Error "No hole at the current location."
Got: Load "/home/izzy/prog/slick/Mote.hs"
Giving: Error "GHC error: /home/izzy/prog/slick/Mote.hs:249:37: Not in scope: \8216gs\8217\n"
Got: Load "/home/izzy/prog/slick/Mote.hs"
Giving: Error "GHC error: /home/izzy/prog/slick/Mote.hs:249:50: Not in scope: \8216gs\8217\n"
Got: Load "/home/izzy/prog/slick/Scratch.hs"
These be the argHoles:fromList []
Giving: Error "GHC error: Mote.Holes.getHoleInfos: Illegal instance declaration for \8216MonadUnique (t m)\8217\n  (All instance types must be of the form (T a1 ... an)\n   where a1 ... an are *distinct type variables*,\n   and each type variable appears at most once in the instance head.\n   Use FlexibleInstances if you want to disable this.)\nIn the instance declaration for \8216MonadUnique (t m)\8217"
ap . fmap) show . sequenceA\n(fmap . fmap) fromEnum . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . sequenceA . (fmap . fmap) toInteger . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) toInteger . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) even . sequenceA . (fmap . fmap) show\n(fmap . fmap) fromEnum . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . fmap print . sequence . (fmap . fmap) show\n(fmap . fmap) toInteger . eitherToMaybe . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) fromIntegral . (fmap . fmap) show . sequence\neitherToMaybe . sequenceA . (fmap . fmap) fromIntegral . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) even . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) show . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) odd . (fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) realToFrac . sequenceA . (fmap . fmap) show\neitherToMaybe . sequence . (fmap . fmap) fromIntegral . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) realToFrac . (fmap . fmap) show . sequence\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) even . (fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) fromEnum . sequenceA . (fmap . fmap) show\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) show . eitherToMaybe . find _ . sequence\neitherToMaybe . (fmap . fmap) (^^ _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . sequenceA\neitherToMaybe . (fmap . fmap) (quotRem _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (divMod _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) fromEnum . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) print . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\neitherToMaybe . sequenceA . (fmap . fmap) odd . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (quotRem _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) unzip . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . eitherToMaybe . sequence\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) head\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap . fmap) Alt . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) head . sequenceA\n(fmap . fmap) fromIntegral . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (^ _) . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . sequence\neitherToMaybe . (fmap . fmap) toInteger . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . sequenceA . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) permutations . sequenceA\neitherToMaybe . (fmap . fmap) realToFrac . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . eitherToMaybe . sequence\neitherToMaybe . find _ . (fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) fromEnum . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) snd\n(fmap . fmap) realToFrac . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . eitherToMaybe . sequence\neitherToMaybe . sequenceA . (fmap . fmap) (encodeFloat _) . (fmap . fmap) show\n(fmap . fmap) even . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) tails . sequence\neitherToMaybe . sequence . (fmap . fmap) enumFrom . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) fromEnum . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) odd . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . fromJust\n(fmap . fmap) (divMod _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (^^ _) . (fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) uncons . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) last . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) subsequences . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) Alt . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) Alt . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) splitLast . sequenceA\n(fmap . fmap) (quotRem _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last\neitherToMaybe . (fmap . fmap) realToFrac . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . sequence . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) inits . sequence\neitherToMaybe . fromJust . fmap (\\x -> readsPrec  x _) . fmap lastMay\neitherToMaybe . (fmap . fmap) enumFrom . sequenceA . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) snd\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . sequence\neitherToMaybe . (fmap . fmap) (divMod _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) tails . sequenceA\n(fmap . fmap) (^^ _) . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (divMod _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) realToFrac . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) print . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) enumFrom . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) inits . sequenceA\n(fmap . fmap) fromIntegral . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (enumFromThen _) . sequence . (fmap . fmap) show\n(fmap . fmap) toInteger . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) Alt . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) splitLast . sequence\n(fmap . fmap) (quotRem _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) subsequences . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) uncons . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) last . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) Alt . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) even . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) enumFrom . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) permutations . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . eitherToMaybe . sequence\neitherToMaybe . sequence . (fmap . fmap) (^ _) . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) print . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . sequence\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . fromJust\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . eitherToMaybe . sequence\n(fmap . fmap) realToFrac . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . eitherToMaybe . sequenceA\n(fmap . fmap) odd . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . sequenceA . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) enumFrom . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . find _ . (fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (encodeFloat _) . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) head . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) last\neitherToMaybe . (fmap . fmap) (^ _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . sequence\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) subsequences . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) show . eitherToMaybe . find _ . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . fromJust . fmap lastMay\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) fromIntegral . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (^ _) . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromTo _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap . fmap) Alt . sequence\n(fmap . fmap) enumFrom . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) (quotRem _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (encodeFloat _) . sequence . (fmap . fmap) show\neitherToMaybe . sequence . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) unzip . sequence\neitherToMaybe . find _ . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromTo _) . sequenceA . (fmap . fmap) show\neitherToMaybe . sequence . (fmap . fmap) (^^ _) . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . sequence . (fmap . fmap) even . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . sequenceA\n(fmap . fmap) even . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . find _ . sequence . (fmap . fmap) show\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) snd\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequenceA\neitherToMaybe . (fmap . fmap) show . find _ . sequence\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (^ _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . eitherToMaybe . sequenceA\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (encodeFloat _) . (fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) last\neitherToMaybe . (fmap . fmap) (encodeFloat _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (^^ _) . (fmap . fmap) show . sequenceA\n(fmap . fmap) (^ _) . (fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . sequence . (fmap . fmap) show\n(fmap . fmap) toInteger . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . eitherToMaybe . sequenceA\neitherToMaybe . sequence . fmap (find _) . (fmap . fmap) show\n(fmap . fmap) enumFrom . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . fromJust . fmap lastMay\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) realToFrac . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) print . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . fromJust . fmap listToMaybe\n(fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) head . sequence\n(fmap . fmap) odd . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . sequenceA . (fmap . fmap) (^^ _) . (fmap . fmap) show\n(fmap . fmap) enumFrom . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (divMod _) . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . sequence\neitherToMaybe . (fmap . fmap) print . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) snd . eitherToMaybe . sequence\n(fmap . fmap) odd . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . sequenceA . fmap (find _) . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . eitherToMaybe . sequenceA\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) subsequences . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) last . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) uncons . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) enumFrom . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) splitLast . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . sequence\n(fmap . fmap) fromIntegral . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) show\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . sequenceA\n(fmap . fmap) (^ _) . eitherToMaybe . (fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) (divMod _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) realToFrac . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . fromJust . fmap listToMaybe\n(fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) unzip . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromThen _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) print . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . eitherToMaybe . sequenceA\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) enumFrom . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . sequenceA\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap . fmap) snd . sequenceA\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) (^ _) . (fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) odd . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (encodeFloat _) . (fmap . fmap) show . sequence\n(fmap . fmap) (quotRem _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) tails . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) enumFrom . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (divMod _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) inits . sequenceA\n(fmap . fmap) (^^ _) . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) Alt . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) last\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) Alt . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . sequenceA\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) show . sequence\n(fmap . fmap) toInteger . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) last\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) unzip . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) snd . sequenceA\neitherToMaybe . fmap print . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . sequence\neitherToMaybe . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap) (\\x -> showList  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) permutations . sequence\n(fmap . fmap) even . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) print . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) Alt . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (^ _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) unzip . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (divMod _) . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . sequenceA . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . fromJust\neitherToMaybe . (fmap . fmap) (^^ _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap) (\\x -> showList  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . sequenceA\n(fmap . fmap) (quotRem _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) show . sequenceA\n(fmap . fmap) toInteger . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) snd . sequence\neitherToMaybe . fmap print . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) head\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) permutations . sequenceA\neitherToMaybe . (fmap . fmap) even . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) inits . sequence\neitherToMaybe . sequenceA . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . eitherToMaybe . sequenceA\n(fmap . fmap) (quotRem _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) tails . sequence\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (encodeFloat _) . (fmap . fmap) show . sequenceA\neitherToMaybe . fromJust . fmap (\\x -> readsPrec  x _) . fmap listToMaybe\neitherToMaybe . (fmap . fmap) fromIntegral . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) head\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . fromJust\neitherToMaybe . (fmap . fmap) (^ _) . (fmap . fmap) show . sequenceA\n(fmap . fmap) toInteger . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap . fmap) snd . sequence\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . sequence . (fmap . fmap) show\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (divMod _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . sequenceA\neitherToMaybe . fmap print . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) Alt . sequence\n(fmap . fmap) (^^ _) . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) (^^ _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . (fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) inits . sequence\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) splitLast . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) snd\n(fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) last . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) unzip . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) subsequences . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . fromJust\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) last . sequence\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) tails . sequence\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) Alt . sequence\neitherToMaybe . sequence . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) enumFrom . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) odd . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) splitLast . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . sequenceA\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) uncons . sequenceA\neitherToMaybe . (fmap . fmap) (quotRem _) . sequence . (fmap . fmap) show\n(fmap . fmap) (^ _) . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) head . sequenceA\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap . fmap) snd . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) print . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . fromJust\neitherToMaybe . (fmap . fmap) (divMod _) . (fmap . fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) realToFrac . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . eitherToMaybe . sequence\n(fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) odd . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (quotRem _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) permutations . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) uncons . sequence\n(fmap . fmap) even . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . fmap print . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) toInteger . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . eitherToMaybe . sequence\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) (^^ _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) fromIntegral . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (^^ _) . (fmap . fmap) show . sequence\n(fmap . fmap) (^ _) . (fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) head\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (encodeFloat _) . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) even . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequence\neitherToMaybe . (fmap . fmap) show . find _ . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . sequence\n(fmap . fmap) toInteger . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) head . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> showsPrec  x _ _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> showsPrec  x _ _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> showsPrec  x _ _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> showsPrec  x _ _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . find _ . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . sequenceA\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> readParen  x _ _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . fmap (find _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . foldl1 _\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . sequence\neitherToMaybe . sequenceA . (fmap . fmap) (^^ _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> genericIndex  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo _ x _) . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (maximumBy _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (break _) . sequenceA\n(fmap . fmap) (\\x -> AnnotatedTerm _ x _) . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . eitherToMaybe . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) even . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . eitherToMaybe . sequenceA\neitherToMaybe . maximumBy _ . fmap (\\x -> readsPrec  x _) . fmap listToMaybe\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . find _ . sequenceA\n(fmap . fmap) (enumFromThenTo _ _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\neitherToMaybe . sequenceA . fmap (find _) . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (enumFromTo _) . sequenceA . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) even . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showParen  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (span _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . minimumBy _\n(fmap . fmap) (\\x -> enumFromThenTo _ x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . eitherToMaybe . sequence\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupAllBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . find _ . sequenceA\neitherToMaybe . fromMaybe _ . fmap (\\x -> readsPrec  x _) . fmap listToMaybe\n(fmap . fmap) (enumFromThenTo _ _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupAllBy _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo _ x _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> genericIndex  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (AnnotatedTerm _ _) . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . sequenceA\neitherToMaybe . (fmap . fmap) (quotRem _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . foldr1 _ . fmap (\\x -> readsPrec  x _) . fmap lastMay\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (span _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . fromMaybe _ . fmap listToMaybe\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . fromJust . fmap (find _)\neitherToMaybe . (fmap . fmap) realToFrac . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) enumFrom . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . eitherToMaybe . sequenceA\n(fmap . fmap) print . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . maximumBy _ . fmap listToMaybe\neitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . find _ . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (foldl1 _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) fromEnum . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) odd . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showParen  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (break _) . sequence\n(fmap . fmap) (\\x -> AnnotatedTerm _ x _) . (fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . fromMaybe _\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) toInteger . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . foldr1 _\n(fmap . fmap) (enumFromThenTo _ _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> readParen  x _ _) . sequence\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (partition _) . sequence\neitherToMaybe . sequence . (fmap . fmap) (enumFromTo _) . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) (\\x -> AnnotatedTerm _ x _) . (fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . fromJust\neitherToMaybe . (fmap . fmap) fromEnum . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . fmap print . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . foldl1 _ . fmap listToMaybe\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . sequence\neitherToMaybe . (fmap . fmap) enumFrom . sequence . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . sequenceA . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldr1 _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (maximumBy _) . sequenceA\n(fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequence\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec  x _ _) . sequence\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _)\neitherToMaybe . (fmap . fmap) realToFrac . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (AnnotatedTerm _ _) . sequence . (fmap . fmap) show\neitherToMaybe . sequence . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (foldl1 _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap) (\\x -> showList  x _) . sequence\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipAgainst _) . sequence\neitherToMaybe . (fmap . fmap) toInteger . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . eitherToMaybe . sequenceA\neitherToMaybe . minimumBy _ . fmap (\\x -> readsPrec  x _) . fmap listToMaybe\n(fmap . fmap) odd . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) even . (fmap . fmap) (\\x -> showParen  x _ _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) even . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (quotRem _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (minimumBy _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (find _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) even . (fmap . fmap) (\\x -> showParen  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zip _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . find _ . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . fromJust . fmap (find _)\neitherToMaybe . sequenceA . (fmap . fmap) (encodeFloat _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (divMod _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . fmap print . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) toInteger . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _)\n(fmap . fmap) (AnnotatedTerm _ _) . (fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (quotRem _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . fmap (find _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1 _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupBy _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipVarEnv _) . sequenceA\n(fmap . fmap) fromIntegral . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . sequence\neitherToMaybe . (fmap . fmap) (enumFromThenTo _ _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThenTo _ x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . foldl1 _ . fmap lastMay\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> readParen  x _ _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> AnnotatedTerm _ x _) . sequence . (fmap . fmap) show\neitherToMaybe . sequenceA . (fmap . fmap) (enumFromTo _) . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> readParen  x _ _) . sequenceA\n(fmap . fmap) (^^ _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . sequenceA\neitherToMaybe . (fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (foldr1 _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (splitAt _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . minimumBy _ . fmap listToMaybe\neitherToMaybe . sequence . (fmap . fmap) even . (fmap . fmap) (\\x -> showParen  x _ _)\n(fmap . fmap) (AnnotatedTerm _ _) . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> enumFromThenTo  x _ _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (^ _) . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . sequence\neitherToMaybe . (fmap . fmap) (AnnotatedTerm _ _) . (fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (genericSplitAt _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1' _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . eitherToMaybe . sequence\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . sequence . (fmap . fmap) odd . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) fromIntegral . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec  x _ _) . sequenceA\n(fmap . fmap) (enumFromThen _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (divMod _) . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . fromMaybe _\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . sequence . (fmap . fmap) odd . (fmap . fmap) (\\x -> showParen  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . minimumBy _\n(fmap . fmap) fromIntegral . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (^^ _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) even . (fmap . fmap) (\\x -> readParen  x _ _) . eitherToMaybe . sequence\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipVarEnv _) . sequence\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap) (\\x -> showList  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . sequenceA\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) realToFrac . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . eitherToMaybe . sequence\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> showParen  x _ _) . sequence\neitherToMaybe . find _ . (fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . maximumBy _\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) (enumFromThen _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . foldr1 _ . fmap listToMaybe\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . sequence\neitherToMaybe . sequence . (fmap . fmap) even . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (encodeFloat _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . eitherToMaybe . sequenceA\n(fmap . fmap) odd . (fmap . fmap) (\\x -> readParen  x _ _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromThenTo _ _) . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (maximumBy _)\n(fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . fmap (find _)\neitherToMaybe . (fmap . fmap) (\\x -> AnnotatedTerm _ x _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) enumFrom . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) fromEnum . sequenceA . (fmap . fmap) (\\x -> showsPrec  x _ _)\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo  x _ _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1' _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap) (\\x -> showList  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThenTo  x _ _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (maximumBy _) . sequence\neitherToMaybe . (fmap . fmap) (enumFromThen _) . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> genericIndex  x _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . sequenceA . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . minimumBy _\neitherToMaybe . (fmap . fmap) print . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) odd . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> !!  x _) . sequence\neitherToMaybe . sequenceA . (fmap . fmap) odd . (fmap . fmap) (\\x -> showParen  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (minimumBy _)\n(fmap . fmap) (\\x -> enumFromThenTo _ x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (divMod _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . foldl1 _ . fmap (\\x -> readsPrec  x _) . fmap listToMaybe\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> !!  x _)\neitherToMaybe . (fmap . fmap) (encodeFloat _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (quotRem _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> AnnotatedTerm _ x _) . eitherToMaybe . (fmap . fmap) show . sequence\neitherToMaybe . fromJust . fmap (\\x -> readsPrec  x _) . fmap (find _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . sequence\n(fmap . fmap) toInteger . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\n(fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . foldr1 _ . fmap lastMay\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . foldl1 _\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . sequenceA\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> readParen  x _ _) . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . sequence . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (foldl1' _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (partition _) . sequenceA\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . sequenceA\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipVarEnv _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . foldl1 _\n(fmap . fmap) fromIntegral . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (enumFromThenTo _ _) . (fmap . fmap . fmap) show . sequence\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . sequenceA\neitherToMaybe . (fmap . fmap) (AnnotatedTerm _ _) . (fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (^ _) . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> enumFromThenTo  x _ _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . maximumBy _\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (foldl1' _)\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1' _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> genericIndex  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (minimumBy _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . sequence\n(fmap . fmap) (\\x -> enumFromThenTo _ x _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> enumFromThenTo  x _ _) . eitherToMaybe . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . minimumBy _\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (genericSplitAt _) . sequence\neitherToMaybe . (fmap . fmap) even . sequence . (fmap . fmap) (\\x -> showParen  x _ _)\neitherToMaybe . sequence . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1 _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . foldr1 _ . fmap lastMay\neitherToMaybe . (fmap . fmap) (encodeFloat _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) print . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (splitAt _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> !!  x _)\n(fmap . fmap) (AnnotatedTerm _ _) . eitherToMaybe . (fmap . fmap) show . sequence\n(fmap . fmap) (enumFromThen _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec  x _ _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (enumFromThen _) . sequenceA . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . sequence\neitherToMaybe . (fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . sequence\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> readParen  x _ _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . sequence . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> readParen  x _ _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . eitherToMaybe . fromJust\neitherToMaybe . fmap print . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> AnnotatedTerm _ x _) . (fmap . fmap) show . sequenceA\n(fmap . fmap) realToFrac . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (partition _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipAgainst _) . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\neitherToMaybe . (fmap . fmap) odd . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _)\neitherToMaybe . sequence . (fmap . fmap) (encodeFloat _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (AnnotatedTerm _ _) . (fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) fromIntegral . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _)\neitherToMaybe . (fmap . fmap) (divMod _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec  x _ _) . sequenceA\neitherToMaybe . (fmap . fmap) odd . sequence . (fmap . fmap) (\\x -> showParen  x _ _)\neitherToMaybe . sequence . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . minimumBy _\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (enumFromThen _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (maximumBy _)\neitherToMaybe . (fmap . fmap) enumFrom . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . foldr1 _\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . fromMaybe _\n(fmap . fmap) (quotRem _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) even . (fmap . fmap) (\\x -> showParen  x _ _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (find _) . eitherToMaybe . sequence\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\n(fmap . fmap) odd . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromThenTo _ _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . fmap (find _)\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap) (\\x -> showList  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . sequence\n(fmap . fmap) toInteger . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo  x _ _) . sequence . (fmap . fmap) show\neitherToMaybe . sequence . (fmap . fmap) (\\x -> AnnotatedTerm _ x _) . (fmap . fmap) show\n(fmap . fmap) (divMod _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . find _ . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zip _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldr1 _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (maximumBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . foldl1 _\n(fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (minimumBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (find _) . sequence\neitherToMaybe . minimumBy _ . fmap (\\x -> readsPrec  x _) . fmap lastMay\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1 _) . sequence\neitherToMaybe . (fmap . fmap) fromIntegral . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (foldr1 _)\neitherToMaybe . (fmap . fmap) (^^ _) . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> showParen  x _ _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (splitAt _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . sequenceA\neitherToMaybe . (fmap . fmap) print . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo  x _ _) . (fmap . fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) odd . sequenceA . (fmap . fmap) (\\x -> showParen  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (find _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (minimumBy _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (^ _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . foldr1 _\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zip _) . sequenceA\n(fmap . fmap) (AnnotatedTerm _ _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldr1 _) . sequence\n(fmap . fmap) realToFrac . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThenTo  x _ _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\n(fmap . fmap) (^^ _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . foldl1 _ . fmap lastMay\n(fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . eitherToMaybe . sequence\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipAgainst _) . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . sequence\neitherToMaybe . (fmap . fmap) odd . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (genericSplitAt _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . eitherToMaybe . sequence\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (enumFromTo _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (enumFromTo _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) print . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . maximumBy _\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . sequence\neitherToMaybe . (fmap . fmap) even . sequenceA . (fmap . fmap) (\\x -> showParen  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (\\x -> !!  x _)\neitherToMaybe . (fmap . fmap) (^^ _) . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . fmap (find _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1 _) . sequenceA\neitherToMaybe . sequence . fmap (find _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\n(fmap . fmap) (^ _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo  x _ _) . (fmap . fmap . fmap) show . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (foldl1' _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> genericIndex  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (^ _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipVarEnv _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (splitAt _) . sequenceA\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> showParen  x _ _) . sequence\n(fmap . fmap) print . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . find _ . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _)\n(fmap . fmap) (\\x -> enumFromThenTo  x _ _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldr1 _) . sequenceA\n(fmap . fmap) realToFrac . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zip _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> scaleFloat  x _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (minimumBy _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (\\x -> genericIndex  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . fromMaybe _\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . eitherToMaybe . sequenceA\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (enumFromTo _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (genericSplitAt _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (minimumBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (find _) . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipAgainst _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (^^ _) . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) even . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) odd . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (^ _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) print . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) toInteger . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . sequenceA\n(fmap . fmap) (enumFromThenTo _ _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (minimumBy _)\n(fmap . fmap) realToFrac . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\n(fmap . fmap) even . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupAllBy _) . sequence\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> showsPrec  x _ _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . eitherToMaybe . sequenceA\neitherToMaybe . maximumBy _ . fmap (\\x -> readsPrec  x _) . fmap lastMay\neitherToMaybe . sequenceA . (fmap . fmap) (^ _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec  x _ _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequence . (fmap . fmap) (\\x -> genericIndex  x _)\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> AnnotatedTerm _ x _) . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . fromMaybe _\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . sequenceA\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) odd . (fmap . fmap) (\\x -> showParen  x _ _) . eitherToMaybe . sequence\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . fmap (find _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (foldl1' _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . maximumBy _\n(fmap . fmap) (enumFromThenTo _ _) . (fmap . fmap . fmap) show . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . find _ . sequenceA\neitherToMaybe . (fmap . fmap) (^ _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (break _) . sequenceA\neitherToMaybe . find _ . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (enumFromTo _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) fromEnum . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (\\x -> !!  x _)\neitherToMaybe . (fmap . fmap) (encodeFloat _) . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . sequenceA\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . sequenceA\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec  x _ _) . eitherToMaybe . sequence\neitherToMaybe . foldl1 _ . fmap (\\x -> readsPrec  x _) . fmap lastMay\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> !!  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) lastMay . foldl1 _\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> AnnotatedTerm _ x _) . eitherToMaybe . sequenceA . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (maximumBy _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . fmap (find _)\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequence\neitherToMaybe . (fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> enumFromThenTo _ x _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . foldr1 _ . fmap listToMaybe\n(fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . fromMaybe _\neitherToMaybe . (fmap . fmap) fromEnum . sequence . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . sequenceA . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec  x _ _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromTo _) . sequence . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . sequence . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _)\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> showParen  x _ _) . sequence\n(fmap . fmap) (\\x -> divMod  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) enumFrom . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . maximumBy _\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> genericIndex  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap) (\\x -> showList  x _) . sequence\neitherToMaybe . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (span _) . sequence\neitherToMaybe . find _ . (fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . eitherToMaybe . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (^ _) . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (^^ _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> showParen  x _ _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> !!  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThenTo _ x _) . eitherToMaybe . (fmap . fmap . fmap) show . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThen  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\neitherToMaybe . sequence . (fmap . fmap) (AnnotatedTerm _ _) . (fmap . fmap) show\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (maximumBy _) . sequenceA\n(fmap . fmap) fromEnum . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . maximumBy _ . fmap lastMay\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap) (\\x -> showList  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . sequence\n(fmap . fmap) (enumFromThen _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequenceA\n(fmap . fmap) (\\x -> AnnotatedTerm _ x _) . eitherToMaybe . sequence . (fmap . fmap) show\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . fromMaybe _ . fmap lastMay\n(fmap . fmap) (divMod _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (divMod _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . maximumBy _\n(fmap . fmap) (\\x -> enumFromTo  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (^^ _) . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (divMod _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (quotRem _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . sequence . (fmap . fmap) (enumFromThen _) . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) (^ _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> AnnotatedTerm _ x _) . eitherToMaybe . (fmap . fmap) show . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . sequenceA\n(fmap . fmap) (quotRem _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (partition _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo _ x _) . sequenceA . (fmap . fmap) show\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . minimumBy _ . fmap listToMaybe\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (foldr1 _)\neitherToMaybe . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> scaleFloat  x _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> readParen  x _ _) . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zip _) . eitherToMaybe . sequence\n(fmap . fmap) (encodeFloat _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . sequenceA\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . find _ . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . sequence\neitherToMaybe . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (find _) . fromJust\n(fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . foldl1 _ . fmap listToMaybe\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap) (\\x -> showList  x _) . sequence\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (zipVarEnv _) . sequenceA\neitherToMaybe . (fmap . fmap) enumFrom . sequenceA . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence . (fmap . fmap) (foldl1 _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . fmap (find _)\n(fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . foldl1 _\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupBy _) . sequenceA\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . minimumBy _ . fmap lastMay\n(fmap . fmap) (\\x -> enumFromTo  x _) . (fmap . fmap) (\\x -> showList  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (foldl1' _) . sequence\neitherToMaybe . fmap print . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) even . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (AnnotatedTerm _ _) . sequenceA . (fmap . fmap) show\n(fmap . fmap) print . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\n(fmap . fmap) even . eitherToMaybe . (fmap . fmap) (\\x -> showParen  x _ _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) even . (fmap . fmap) (\\x -> readParen  x _ _) . eitherToMaybe . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (enumFromThen _) . (fmap . fmap) (\\x -> showList  x _)\n(fmap . fmap) odd . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (^^ _) . (fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . eitherToMaybe . foldr1 _\n(fmap . fmap) odd . (fmap . fmap) (\\x -> readParen  x _ _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> quotRem  x _) . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . sequence . (fmap . fmap) realToFrac . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupAllBy _) . eitherToMaybe . sequence\neitherToMaybe . sequenceA . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) odd . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showParen  x _ _)\neitherToMaybe . sequenceA . (fmap . fmap) odd . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . sequenceA\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (span _) . sequenceA\neitherToMaybe . find _ . (fmap . fmap) (\\x -> shows  x _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . eitherToMaybe . sequenceA\n(fmap . fmap) toInteger . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . maximumBy _ . fmap listToMaybe\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> genericIndex  x _) . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showList  x _)\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) listToMaybe . minimumBy _\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . fromMaybe _ . fmap listToMaybe\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (\\x -> !!  x _) . sequenceA\n(fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec  x _ _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . fmap (find _)\n(fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec  x _ _) . eitherToMaybe . sequenceA\n(fmap . fmap) (encodeFloat _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (span _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . eitherToMaybe . sequence\n(fmap . fmap) (^^ _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) enumFrom . (fmap . fmap . fmap) (\\x -> showsPrec _ x _) . sequence\neitherToMaybe . (fmap . fmap) even . (fmap . fmap) (\\x -> showParen  x _ _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (break _) . sequence\n(fmap . fmap) print . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec _ x _) . sequenceA\n(fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap) (\\x -> showList  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) toInteger . (fmap . fmap) (\\x -> showsPrec _ x _) . sequence\n(fmap . fmap) (\\x -> divMod  x _) . (fmap . fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (quotRem _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . sequenceA . (fmap . fmap) (foldl1 _)\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap) (\\x -> showList  x _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (minimumBy _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) lastMay . foldr1 _\neitherToMaybe . (fmap . fmap) odd . (fmap . fmap) (\\x -> showParen  x _ _) . sequenceA\n(fmap . fmap) print . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) enumFrom . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec  x _ _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . minimumBy _ . fmap lastMay\neitherToMaybe . sequence . (fmap . fmap) fromEnum . (fmap . fmap) (\\x -> showsPrec  x _ _)\n(fmap . fmap) (quotRem _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) realToFrac . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (\\x -> !!  x _) . sequenceA\n(fmap . fmap) even . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequenceA\n(fmap . fmap) toInteger . (fmap . fmap) (\\x -> showsPrec _ x _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldr1 _) . sequence\neitherToMaybe . sequenceA . (fmap . fmap) (\\x -> readsPrec  x _) . fmap (find _)\neitherToMaybe . (fmap . fmap) (^^ _) . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1' _) . eitherToMaybe . sequence\n(fmap . fmap) (\\x -> enumFromThen  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (partition _) . eitherToMaybe . sequenceA\n(fmap . fmap) fromEnum . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showsPrec _ x _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (genericSplitAt _) . sequence\n(fmap . fmap) (\\x -> quotRem  x _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . sequence\n(fmap . fmap) fromEnum . eitherToMaybe . (fmap . fmap) (\\x -> showsPrec  x _ _) . sequence\n(fmap . fmap) (^ _) . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (\\x -> shows  x _) . eitherToMaybe . find _ . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) listToMaybe . eitherToMaybe . foldr1 _\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (foldl1 _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (groupAllBy _) . sequenceA\n(fmap . fmap) enumFrom . eitherToMaybe . (fmap . fmap . fmap) (\\x -> showsPrec  x _ _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> enumFromThenTo _ x _) . sequence . (fmap . fmap) show\n(fmap . fmap) (AnnotatedTerm _ _) . eitherToMaybe . sequence . (fmap . fmap) show\neitherToMaybe . fromMaybe _ . fmap (\\x -> readsPrec  x _) . fmap lastMay\neitherToMaybe . (fmap . fmap) (enumFromTo _) . (fmap . fmap . fmap) (\\x -> readsPrec  x _) . sequenceA\n(fmap . fmap) (\\x -> scaleFloat  x _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\n(fmap . fmap) (enumFromThenTo _ _) . (fmap . fmap . fmap) show . eitherToMaybe . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . sequence\n(fmap . fmap) (^ _) . eitherToMaybe . (fmap . fmap) (\\x -> shows  x _) . sequence\neitherToMaybe . (fmap . fmap) (enumFromThen _) . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . sequenceA . (fmap . fmap) fromIntegral . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) odd . (fmap . fmap) (\\x -> showParen  x _ _) . eitherToMaybe . sequenceA\n(fmap . fmap) (enumFromTo _) . eitherToMaybe . (fmap . fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . foldr1 _ . fmap (\\x -> readsPrec  x _) . fmap listToMaybe\n(fmap . fmap) even . eitherToMaybe . sequence . (fmap . fmap) (\\x -> showsPrec _ x _)\n(fmap . fmap) (divMod _) . eitherToMaybe . sequence . (fmap . fmap) (\\x -> shows  x _)\neitherToMaybe . (fmap . fmap) (encodeFloat _) . (fmap . fmap) (\\x -> shows  x _) . sequenceA\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . fromMaybe _ . fmap lastMay\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . sequenceA . (fmap . fmap) (foldr1 _)\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . (fmap . fmap) (break _) . sequence\n(fmap . fmap) even . eitherToMaybe . sequenceA . (fmap . fmap) (\\x -> showParen  x _ _)\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (zipAgainst _) . sequence\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (groupBy _) . eitherToMaybe . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (splitAt _) . eitherToMaybe . sequence\neitherToMaybe . (fmap . fmap) (\\x -> readsPrec  x _) . (fmap . fmap) (maximumBy _) . sequenceA\n(fmap . fmap) (\\x -> readsPrec  x _) . eitherToMaybe . maximumBy _ . fmap lastMay\n"
